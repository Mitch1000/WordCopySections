{"version":3,"file":"taskpane.js","mappings":"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","sources":["webpack://office-addin-taskpane-js/./src/taskpane/taskpane.html","webpack://office-addin-taskpane-js/./node_modules/html-loader/dist/runtime/getUrl.js","webpack://office-addin-taskpane-js/webpack/bootstrap","webpack://office-addin-taskpane-js/webpack/runtime/compat get default export","webpack://office-addin-taskpane-js/webpack/runtime/define property getters","webpack://office-addin-taskpane-js/webpack/runtime/global","webpack://office-addin-taskpane-js/webpack/runtime/hasOwnProperty shorthand","webpack://office-addin-taskpane-js/webpack/runtime/publicPath","webpack://office-addin-taskpane-js/webpack/runtime/jsonp chunk loading","webpack://office-addin-taskpane-js/./src/taskpane/taskpane.js"],"sourcesContent":["// Imports\nimport ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___ from \"../../node_modules/html-loader/dist/runtime/getUrl.js\";\nvar ___HTML_LOADER_IMPORT_0___ = new URL(\"./taskpane.css\", import.meta.url);\n// Module\nvar ___HTML_LOADER_REPLACEMENT_0___ = ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___(___HTML_LOADER_IMPORT_0___);\nvar code = \" <!DOCTYPE html> <html> <head> <meta charset=\\\"UTF-8\\\"/> <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=Edge\\\"/> <meta name=\\\"viewport\\\" content=\\\"width=device-width,initial-scale=1\\\"> <title>Contoso Task Pane Add-in</title> <\" + \"script src=\\\"https://appsforoffice.microsoft.com/lib/1.1/hosted/office.js\\\"><\" + \"/script> <link rel=\\\"stylesheet\\\" href=\\\"https://static2.sharepointonline.com/files/fabric/office-ui-fabric-core/11.0.0/css/fabric.min.css\\\"/> <link href=\\\"\" + ___HTML_LOADER_REPLACEMENT_0___ + \"\\\" rel=\\\"stylesheet\\\"/> </head> <body class=\\\"ms-font-m ms-welcome ms-Fabric\\\"> <header class=\\\"ms-welcome__header ms-bgColor-neutralLighter\\\"> <h1 class=\\\"ms-font-su\\\">Copy Sections</h1> </header> <section id=\\\"sideload-msg\\\" class=\\\"ms-welcome__main\\\"> <h2 class=\\\"ms-font-xl\\\">Please <a target=\\\"_blank\\\" href=\\\"https://learn.microsoft.com/office/dev/add-ins/testing/test-debug-office-add-ins#sideload-an-office-add-in-for-testing\\\">sideload</a> your add-in to see app body.</h2> </section> <main id=\\\"app-body\\\" class=\\\"ms-welcome__main\\\" style=\\\"display:none\\\"> <label> Number of Characters in Section </label> <textarea id=\\\"copy-to-clip\\\"> </textarea> <input id=\\\"chunk-size\\\" placeholder=\\\"4000\\\"> <p class=\\\"info\\\" id=\\\"error\\\"> Error: Section word count value must be a valid number </p> <label> Section Number </label> <select id=\\\"chunk-number\\\"> </select> <div id=\\\"copied-box\\\"> <div id=\\\"copied-info\\\" class=\\\"copied-box-content\\\"> </div> </div> <div class=\\\"info-box\\\"> <p class=\\\"info\\\"> Number of sections in text: <span class=\\\"count\\\" id=\\\"chunk-count\\\"> n </span> </p> <p class=\\\"info\\\"> Current word count: <span class=\\\"count\\\" id=\\\"word-count\\\"> N </span> </p> <p class=\\\"info\\\"> Current character count: <span class=\\\"count\\\" id=\\\"character-count\\\"> N </span> </p> </div> <div id=\\\"loader\\\" class=\\\"dot-elastic\\\"></div> <button role=\\\"button\\\" id=\\\"run\\\"> Copy Section </button> </main> </body> </html> \";\n// Exports\nexport default code;","\"use strict\";\n\nmodule.exports = function (url, options) {\n  if (!options) {\n    // eslint-disable-next-line no-param-reassign\n    options = {};\n  }\n\n  if (!url) {\n    return url;\n  } // eslint-disable-next-line no-underscore-dangle, no-param-reassign\n\n\n  url = String(url.__esModule ? url.default : url);\n\n  if (options.hash) {\n    // eslint-disable-next-line no-param-reassign\n    url += options.hash;\n  }\n\n  if (options.maybeNeedQuotes && /[\\t\\n\\f\\r \"'=<>`]/.test(url)) {\n    return \"\\\"\".concat(url, \"\\\"\");\n  }\n\n  return url;\n};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t926: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function","/*\n * Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n * See LICENSE in the project root for license information.\n */\n/* global  Office, Word */\nasync function tryCatch(callback) {\n  try {\n    return callback();\n  } catch (error) {\n    // Note: In a production add-in, you'd want to notify the user through your add-in's UI.\n    setError(error);\n  }\n}\nfunction getFile(){\n    return new Promise((resolve, reject) => {\n      Office.context.document.getFileAsync(Office.FileType.Text, { sliceSize: 4194304  /*64 KB*/ },\n        function (result) {\n            if (result.status == \"succeeded\") {\n                // If the getFileAsync call succeeded, then\n                // result.value will return a valid File Object.\n                var myFile = result.value;\n                var sliceCount = myFile.sliceCount;\n                var slicesReceived = 0, gotAllSlices = true, docdataSlices = [];\n\n                // Get the file slices.\n                getSliceAsync(myFile, 0, sliceCount, gotAllSlices, docdataSlices, slicesReceived)\n                  .then((fileData) => {\n                    resolve(fileData);\n                  }).catch(error => {\n                    setError(error); reject(error)\n                  });\n            }\n            else {\n                setError(result.error.message);\n                reject(result.error.message);\n            }\n        });\n      });\n}\n\n\nfunction getSliceAsync(file, nextSlice, sliceCount, gotAllSlices, docdataSlices, slicesReceived) {\n    return new Promise((resolve, reject) => {\n      file.getSliceAsync(nextSlice, function (sliceResult) {\n          if (sliceResult.status == \"succeeded\") {\n              if (!gotAllSlices) { // Failed to get all slices, no need to continue.                                });\n                  return;                                                                                           \n              }                                                                                                     \n                                                                                                                     \n              // Got one slice, store it in a temporary array.                                                      \n              // (Or you can do something else, such as                                                             \n              // send it to a third-party server.)\n              docdataSlices[sliceResult.value.index] = sliceResult.value.data;                                      \n              if (++slicesReceived == sliceCount) {                                                                 \n                  // All slices have been received.                                                                 \n                  file.closeAsync();                                                                                \n                  resolve(docdataSlices); \n              }                                                                                                     \n              else {                                                                                                \n                  getSliceAsync(file, ++nextSlice, sliceCount, gotAllSlices, docdataSlices, slicesReceived);        \n              }                                                                                                     \n          }                                                                                                         \n          else {                                                                                                    \n              gotAllSlices = false;                                                                                 \n              file.closeAsync();                                                                                    \n              setError(sliceResult.error.message);                                                                  \n              reject(sliceResult.error.message);\n          }                                                                                                         \n      });\n    });\n}\n\n function setError(message) { \n    const errorEl = document.getElementById('error');\n    errorEl.style.display = '';\n    errorEl.innerText = message;\n }\n\n function clearError() { \n    const errorEl = document.getElementById('error');\n    errorEl.innerText = '';\n    errorEl.style.display = 'none';\n }\n\nfunction getChunkSize() {\n  // Gets Chunk Size  \n  const chunkSizeEl = document.getElementById('chunk-size');\n  let chunkSize = 4000; \n  const chunkSizeValue = chunkSizeEl.value;\n  if (chunkSizeValue.length > 0) {\n    const value = parseInt(chunkSizeValue, 10);\n    const minValue = 500; \n    if (isNaN(value)) {\n      setError('Error: Section word count value must be a valid number');\n    } else if (value < minValue) {\n      setError(`Error: Section word count must be greater than ${minValue}`);\n    } else\n      chunkSize = value;\n    }\n  return chunkSize;\n}\n\nfunction setSelectedValue(selectionEl, valueToSet) {\n    for (var i = 0; i < selectionEl.options.length; i++) {\n        if (selectionEl.options[i].text== valueToSet) {\n            selectionEl.options[i].selected = true;\n            return;\n        }\n    }\n}\n\nfunction getSelectionOptions(chunkCount) {\n  const selectionEl = document.getElementById('chunk-number');\n  const previousValue = selectionEl.value;\n\n  while (selectionEl.options.length > 0) {                \n    selectionEl.remove(0);\n  } \n\n  for (let i = 1; i <= chunkCount; i++) {\n    const option = document.createElement(\"option\"); \n    option.text = i;\n    option.value = i;\n    selectionEl.add(option);\n  }\n\n  setSelectedValue(selectionEl, previousValue);\n}\n\n\n function getData() {\n    startLoading();\n    return new Promise((resolve, reject) => {\n      return Word.run(async function () {\n          return getFile() \n            .then(function(result){\n               let bodyText = '';\n               result.forEach((paragraph, index) => {\n                 if ((paragraph || '').length > 0) {\n                   if (index === result.length) {\n                     bodyText += paragraph;  \n                     return;\n                   }\n                   \n                   bodyText += `${paragraph}`\n                 }\n               });\n               const wordsArray = bodyText.split(/[\\s\\n]+/).filter(w => w.length > 0);\n\n               const wordCount = wordsArray.length;\n               const wordCountEl = document.getElementById('word-count');\n               wordCountEl.innerText = wordCount;\n\n               clearError();\n               const charaCountEl = document.getElementById('character-count');\n               charaCountEl.innerText = bodyText.length;\n\n               stopLoading();\n               resolve({ wordsArray, bodyText });\n\n             }).catch(error => {\n               stopLoading();\n               setError(error);\n               reject(error);\n             });\n           }).catch((error) => {\n               setError(error);\n               reject(error);\n           });\n    });\n}\n\nfunction updateUI() {\n  getData().then((data) => {\n    const { bodyText } = data; \n    const chunkSize = getChunkSize();\n    const chunkCountEl = document.getElementById('chunk-count');\n    const chunkCount = Math.ceil(bodyText.length / chunkSize);\n    chunkCountEl.innerText = chunkCount;\n    \n    const selectionEl = document.getElementById('chunk-number');\n    \n    if (document.activeElement !== selectionEl) {\n      getSelectionOptions(chunkCount);\n    }\n\n  });\n}\n\n\nfunction copySectionToClipboard(bodyText) {\n  const selectionEl = document.getElementById('chunk-number');\n  const selectionValue = selectionEl.value;\n  if (selectionValue) {\n    const chunkNumber = parseInt(selectionValue, 10);\n\n    const chunkSize = getChunkSize();\n    const chunkStart = (chunkNumber - 1) * chunkSize;\n    const chunkEnd = chunkStart + chunkSize;\n\n    const sectionText = bodyText.substring(chunkStart, chunkEnd);\n    const allWords = bodyText.split(/[\\s\\n]+/).filter(w => w.length > 0)\n\n    const wordsArray = sectionText.split(/[\\s\\n]+/).filter(w => w.length > 0);\n\n    if (typeof wordsArray[1] !== 'undefined') {\n      const firstWordIndex = allWords.indexOf(wordsArray[1]) - 1;\n      const firstWord = allWords[firstWordIndex];\n\n      if (typeof firstWord !== 'undefined') {\n        wordsArray[0] = firstWord;\n      }\n    }\n\n    let textChunk = '';\n    for(let i = 0; i < wordsArray.length - 1; i++) {\n      if (typeof wordsArray[i] !== 'undefined') {\n        const chunkAddition = `${textChunk} ${wordsArray[i + 1]}`;\n\n        if (i === wordsArray.length - 2 || typeof wordsArray[i + 1] === 'undefined' || chunkAddition.length > chunkSize) {\n          textChunk += wordsArray[i];\n          break;\n        }\n        textChunk += `${wordsArray[i]} `;\n      } \n    }\n    \n    // Use the 'out of viewport hidden text area' trick\n    const textArea = document.getElementById(\"copy-to-clip\");\n    textArea.value = textChunk;\n        \n    // Move textarea out of the viewport so it's not visible\n    textArea.style.position = \"absolute\";\n    textArea.style.left = \"-999999px\";\n  \n    textArea.select();\n  \n    try {\n        document.execCommand('copy');\n        showCopiedBox();\n    } catch (error) {\n        console.error(error);\n    } \n  }\n}\n\nfunction showCopiedBox() {\n  const copiedBox = document.getElementById(\"copied-box\");\n\n  const selectionEl = document.getElementById('chunk-number');\n  const copiedInfo = document.getElementById('copied-info');\n  copiedInfo.innerText = `Section ${selectionEl.value} copied to clipboard`;\n\n  copiedBox.style.opacity = 1;\n  copiedBox.style.display = '';\n\n  const waitTime = 1200;\n  setTimeout(() => {\n    copiedBox.style.opacity = 0;\n  }, waitTime);\n\n  setTimeout(() => {\n    copiedBox.style.display = 'none';\n  }, waitTime + 500);\n\n}\n\nfunction startLoading() {\n  const button = document.getElementById(\"run\");\n  button.style.opacity = 0.7;\n  button.style.pointerEvents = 'none';\n}\n\nfunction stopLoading() {\n  const button = document.getElementById(\"run\");\n  button.style.opacity = 1;\n  button.style.pointerEvents = '';\n}\n\nfunction debounce(func, timeout = 1000){\n  let timer;\n  return (...args) => {\n    clearTimeout(timer);\n    timer = setTimeout(() => { func.apply(this, args); }, timeout);\n  };\n}\n\n\nOffice.onReady((info) => {\n  if (info.host === Office.HostType.Word) {\n     updateUI();\n     document.getElementById('sideload-msg').style.display = 'none';\n     document.getElementById('app-body').style.display = 'flex';\n     document.getElementById('run').onclick = () => tryCatch(run);\n     document.body.onclick = () => tryCatch(updateUI);\n     document.getElementById('chunk-size').addEventListener('input', () => debounce(tryCatch(updateUI)));\n  }\n});\n\n\nexport async function run() {\n  return Word.run(async (context) => {\n    getData()\n      .then((data) =>  {\n        const { bodyText } = data;\n        copySectionToClipboard(bodyText)\n      });\n\n    await context.sync();\n  });\n}\n"],"names":["___HTML_LOADER_IMPORT_0___","module","exports","url","options","String","__esModule","default","hash","maybeNeedQuotes","test","concat","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","m","n","getter","d","a","definition","key","o","Object","defineProperty","enumerable","get","g","globalThis","this","Function","e","window","obj","prop","prototype","hasOwnProperty","call","scriptUrl","importScripts","location","document","currentScript","src","scripts","getElementsByTagName","length","i","Error","replace","p","b","baseURI","self","href","_regeneratorRuntime","t","r","value","Symbol","iterator","c","asyncIterator","u","toStringTag","define","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","v","values","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","info","error","_asyncToGenerator","fn","args","arguments","apply","err","_x","_tryCatch","_callee2","callback","_context2","t0","setError","getFile","Office","context","getFileAsync","FileType","Text","sliceSize","result","status","myFile","getSliceAsync","sliceCount","fileData","message","file","nextSlice","gotAllSlices","docdataSlices","slicesReceived","sliceResult","index","data","closeAsync","errorEl","getElementById","style","display","innerText","getChunkSize","chunkSize","chunkSizeValue","parseInt","getData","button","opacity","pointerEvents","Word","run","_callee","_context","bodyText","paragraph","wordsArray","split","filter","w","wordCount","stopLoading","updateUI","chunkCountEl","chunkCount","Math","ceil","selectionEl","activeElement","previousValue","remove","option","createElement","text","add","valueToSet","selected","setSelectedValue","getSelectionOptions","copySectionToClipboard","selectionValue","chunkNumber","chunkStart","chunkEnd","sectionText","substring","allWords","firstWordIndex","indexOf","firstWord","textChunk","chunkAddition","textArea","position","left","select","execCommand","copiedBox","setTimeout","waitTime","showCopiedBox","console","_run","_callee4","_context4","_ref2","_callee3","_context3","sync","_x2","onReady","host","HostType","onclick","body","addEventListener","func","timer","_this","timeout","_len","Array","_key","clearTimeout","debounce","URL"],"sourceRoot":""}